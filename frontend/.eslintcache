[{"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Profile.js":"1","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/MyBlogs.js":"2","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Blog.js":"3","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreatePosting.js":"4","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditPosting.js":"5","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Posting.js":"6","/Users/sohye/Desktop/P/9_pen/frontend/src/index.js":"7","/Users/sohye/Desktop/P/9_pen/frontend/src/reducers/userReducers.js":"8","/Users/sohye/Desktop/P/9_pen/frontend/src/reducers/blogReducers.js":"9","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditBlog.js":"10","/Users/sohye/Desktop/P/9_pen/frontend/src/components/RenderHashtags.js":"11","/Users/sohye/Desktop/P/9_pen/frontend/src/components/RenderDate.js":"12","/Users/sohye/Desktop/P/9_pen/frontend/src/store.js":"13","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreateBlog.js":"14","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Signup.js":"15"},{"size":5786,"mtime":1612735846296,"results":"16","hashOfConfig":"17"},{"size":7836,"mtime":1612731831347,"results":"18","hashOfConfig":"17"},{"size":7243,"mtime":1612668493682,"results":"19","hashOfConfig":"17"},{"size":7594,"mtime":1612749340850,"results":"20","hashOfConfig":"17"},{"size":7920,"mtime":1612749921158,"results":"21","hashOfConfig":"17"},{"size":4094,"mtime":1612747826856,"results":"22","hashOfConfig":"17"},{"size":385,"mtime":1611962971129,"results":"23","hashOfConfig":"17"},{"size":2035,"mtime":1612158238911,"results":"24","hashOfConfig":"17"},{"size":2545,"mtime":1612576268198,"results":"25","hashOfConfig":"17"},{"size":5535,"mtime":1612583495369,"results":"26","hashOfConfig":"17"},{"size":531,"mtime":1612747780097,"results":"27","hashOfConfig":"17"},{"size":497,"mtime":1612747780713,"results":"28","hashOfConfig":"17"},{"size":1636,"mtime":1612637679641,"results":"29","hashOfConfig":"17"},{"size":4478,"mtime":1612630412624,"results":"30","hashOfConfig":"17"},{"size":3410,"mtime":1612111874526,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c9acgn",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Profile.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/MyBlogs.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Blog.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreatePosting.js",["64"],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditPosting.js",["65"],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Posting.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/index.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/reducers/userReducers.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/reducers/blogReducers.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditBlog.js",["66","67"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBlogDetails, updateBlog } from '../actions/blogActions';\nimport { CATEGORIES } from '../category';\nimport Loading from '../components/Loading';\nimport Message from '../components/Message';\nimport {  BLOG_UPDATE_RESET } from '../constants/blogConstants';\n\n\nexport default function EditBlog(props) {\n    const dispatch = useDispatch();\n    const blogId = props.match.params.blogId;\n\n    const blogDetails = useSelector(state => state.blogDetails);\n    const { loading: loadingBlogDetails, blog, error: errorBlogDetails } = blogDetails;\n\n    const [title, setTitle] = useState(blog? blog.title : '');\n    const [category, setCategory] = useState(blog? blog.category : '');\n    const [description, setDescription] = useState(blog? blog.description : '');\n    const [image, setImage] = useState(blog? blog.image : '/noimage.jpg');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    const blogUpdate = useSelector(state => state.blogUpdate);\n    const { loading: loadingUpdate, blog: blogUpdated, success: successUpdate, error: errorUpdate } = blogUpdate;\n    \n    const redirect = props.location.search\n        ? props.location.search.split('=')[1]\n        : '/';\n\n    const categories = CATEGORIES.map(category => (\n        <option value={category} key={category}>{category}</option>\n    ))\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateBlog(blogId, title, category, description, image));\n    };\n \n    const resetHandler = () => {\n        setTitle(blog? blog.title : '');\n        setCategory(blog? blog.category : '');\n        setDescription(blog? blog.description : '');\n        setImage(blog? blog.image : '');\n    };\n\n    if (!userInfo) {\n        props.history.push('/login');\n    };\n\n    useEffect(() => {\n        dispatch(getBlogDetails(blogId));\n        if (successUpdate) {\n            alert('Your blog has been successfully updated!');\n            dispatch(getBlogDetails(blogId));\n            setTitle(blogUpdated ? blogUpdated.title : '');\n            setCategory(blogUpdated ? blogUpdated.category : '');\n            setDescription(blogUpdated ? blogUpdated.description : '');\n            setImage(blogUpdated ? blogUpdated.image : '/noimage.jpg');\n            props.history.push(`/blogs/${blogId}`);\n        }\n    }, [dispatch, blogId, props.history, successUpdate]);\n\n    return (\n        <div className=\"container__center\">\n            <form className=\"form__content\" onSubmit={submitHandler}>\n                <h1 className=\"form__title\">\n                    Update your blog\n                </h1>\n                {loadingBlogDetails ? <Loading />\n                : errorBlogDetails ? <Message message=\"error\">{errorBlogDetails}</Message> \n                :\n                <>\n                    {successUpdate && <Message message=\"success\">Your blog <span style={{textDecoration: \"italic\"}}>'{blogUpdated ? blogUpdated.title : ''}'</span> has been updated!</Message>}\n                    {loadingUpdate && <Loading />}\n                    {errorUpdate && <Message message=\"error\">{errorUpdate}</Message>}\n                    <div className=\"row\">\n                        <input\n                            className=\"form__input\"\n                            type=\"text\"\n                            id=\"title\"\n                            placeholder=\"title\"\n                            value={title}\n                            onChange={e => setTitle(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"row\">\n                        <select\n                            className=\"form__input\"\n                            id=\"category\"\n                            onChange={e => setCategory(e.target.value)}\n                            value={category}\n                        >\n                            <option defaultValue={true} value=\"\">select category</option>\n                            {categories}\n                        </select>\n                    </div>\n                    <div className=\"row\">\n                        <input\n                            className=\"form__input\"\n                            type=\"text\"\n                            id=\"description\"\n                            placeholder=\"description\"\n                            value={description}\n                            onChange={e => setDescription(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"row\">\n                        <input\n                            className=\"form__input\"\n                            type=\"text\"\n                            id=\"image\"\n                            placeholder=\"image\"\n                            value={image}\n                            onChange={e => setImage(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"row\">\n                        <button className=\"form__btn btn\" type=\"submit\">update</button>\n                    </div>\n                    <div className=\"row between\">\n                        <button className=\"btn btn__reset\" type=\"reset\" onClick={resetHandler}>reset</button>\n                        <button className=\"btn btn__cancel\" onClick={e => props.history.push(redirect)}>cancel</button>\n                    </div>\n                </>}\n            </form>\n        </div>\n    )\n};\n",["68","69"],"/Users/sohye/Desktop/P/9_pen/frontend/src/components/RenderHashtags.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/components/RenderDate.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/store.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreateBlog.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Signup.js",[],{"ruleId":"70","severity":1,"message":"71","line":89,"column":7,"nodeType":"72","endLine":89,"endColumn":67,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":87,"column":7,"nodeType":"72","endLine":87,"endColumn":51,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":7,"column":11,"nodeType":"78","messageId":"79","endLine":7,"endColumn":28},{"ruleId":"70","severity":1,"message":"80","line":62,"column":8,"nodeType":"72","endLine":62,"endColumn":56,"suggestions":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'myblogs'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has missing dependencies: 'postingId' and 'resetHandler'. Either include them or remove the dependency array.",["87"],"no-unused-vars","'BLOG_UPDATE_RESET' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'blogUpdated'. Either include it or remove the dependency array.",["88"],"no-native-reassign",["89"],"no-negated-in-lhs",["90"],{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, success, postingCreated, props.history, userInfo, myblogs]",{"range":"97","text":"98"},"Update the dependencies array to be: [dispatch, success, props.history, userInfo, postingId, resetHandler]",{"range":"99","text":"100"},"Update the dependencies array to be: [dispatch, blogId, props.history, successUpdate, blogUpdated]",{"range":"101","text":"102"},[3136,3196],"[dispatch, success, postingCreated, props.history, userInfo, myblogs]",[3392,3436],"[dispatch, success, props.history, userInfo, postingId, resetHandler]",[2436,2484],"[dispatch, blogId, props.history, successUpdate, blogUpdated]"]