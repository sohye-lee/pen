[{"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreateBlog.js":"1","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Author.js":"2","/Users/sohye/Desktop/P/9_pen/frontend/src/App.js":"3","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Main.js":"4","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Posting.js":"5","/Users/sohye/Desktop/P/9_pen/frontend/src/actions/userActions.js":"6","/Users/sohye/Desktop/P/9_pen/frontend/src/actions/blogActions.js":"7","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Blog.js":"8","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Search.js":"9","/Users/sohye/Desktop/P/9_pen/frontend/src/components/Header.js":"10","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditPosting.js":"11","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditBlog.js":"12","/Users/sohye/Desktop/P/9_pen/frontend/src/store.js":"13","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Follows.js":"14","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreatePosting.js":"15","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Signup.js":"16","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Profile.js":"17","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/MyBlogs.js":"18","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Login.js":"19"},{"size":4496,"mtime":1612924541885,"results":"20","hashOfConfig":"21"},{"size":4271,"mtime":1613471555354,"results":"22","hashOfConfig":"21"},{"size":2776,"mtime":1613345182677,"results":"23","hashOfConfig":"21"},{"size":5873,"mtime":1613353270315,"results":"24","hashOfConfig":"21"},{"size":13111,"mtime":1613469819777,"results":"25","hashOfConfig":"21"},{"size":2811,"mtime":1613345044946,"results":"26","hashOfConfig":"21"},{"size":2955,"mtime":1613345334703,"results":"27","hashOfConfig":"21"},{"size":7550,"mtime":1613579322540,"results":"28","hashOfConfig":"21"},{"size":3132,"mtime":1613444840006,"results":"29","hashOfConfig":"21"},{"size":5584,"mtime":1613469713212,"results":"30","hashOfConfig":"21"},{"size":9084,"mtime":1613575824470,"results":"31","hashOfConfig":"21"},{"size":6921,"mtime":1613579251239,"results":"32","hashOfConfig":"21"},{"size":1986,"mtime":1613006081123,"results":"33","hashOfConfig":"21"},{"size":3433,"mtime":1613268378928,"results":"34","hashOfConfig":"21"},{"size":7509,"mtime":1612924590484,"results":"35","hashOfConfig":"21"},{"size":4455,"mtime":1613143175731,"results":"36","hashOfConfig":"21"},{"size":5794,"mtime":1613143161710,"results":"37","hashOfConfig":"21"},{"size":7844,"mtime":1612835989708,"results":"38","hashOfConfig":"21"},{"size":2214,"mtime":1613143134688,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iwttb",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreateBlog.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Author.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/App.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Main.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Posting.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/actions/userActions.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/actions/blogActions.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Blog.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Search.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/components/Header.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditPosting.js",["81","82","83","84"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Editor } from '@tinymce/tinymce-react';\nimport Axios from 'axios';\nimport { getPostingDetails, updatePosting } from '../actions/postingActions';\nimport { CATEGORIES } from '../category';\nimport Loading from '../components/Loading';\nimport Message from '../components/Message';\nimport { blogGetList } from '../actions/blogActions';\nimport { RenderHashtags } from '../components/RenderHashtags';\nimport dotenv from 'dotenv';\nimport { POSTING_UPDATE_RESET } from '../constants/postingConstants';\n\ndotenv.config();\n\nexport default function EditPosting(props) {\n    const dispatch = useDispatch();\n    const postingId = props.match.params.postingId;\n    const redirectPath = props.location\n        ? props.location.search.split('=')[1]\n        : '/';\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    const postingDetails = useSelector(state => state.postingDetails);\n    const { loading, error, success, posting } = postingDetails;\n    const postingUpdate = useSelector(state => state.postingUpdate);\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = postingUpdate;\n    const blogList = useSelector(state => state.blogList);\n    const { blogs } = blogList;\n    const myblogs = blogs && blogs.filter(blog => blog.author._id === userInfo._id);\n\n    const [title, setTitle] = useState(posting ? posting.title : '');\n    const [blog, setBlog] = useState(posting ? posting.blog._id : '');\n    const [category, setCategory] = useState(posting ? posting.category : '');\n    const [text, setText] = useState(posting ? posting.text : '');\n    const [image, setImage] = useState(posting ? posting.image : '');\n    const [hashtags, setHashtags] = useState(posting ? posting.hashtags.join(',').toString()  : '');\n\n    const categories = CATEGORIES.map(category => (\n        <option value={category} key={category}>{category}</option>\n    ));\n\n    const mybloglist = myblogs \n    ? myblogs.map(blog => (\n        <option value={blog._id} key={blog._id}>{blog.title}</option>\n    ))\n    : <option value={null} disabled={true}>No Blog. You need to created a blog first.</option>\n    \n    const resetHandler = () => {\n        setTitle(posting ? posting.title : '');\n        setBlog(posting ? posting.blog._id : '');\n        setCategory(posting ? posting.category : '');\n        setText(posting ? posting.text : '');\n        setImage(posting ? posting.image : '');\n        setHashtags(posting ? posting.hashtags.join(',') : '');\n    };\n\n    const submitHandler = () => {\n        const hashList = RenderHashtags(hashtags);\n        dispatch(updatePosting({_id: postingId, title, blog, category, text, image, hashtags: hashList}));\n        if (success) {\n            alert('Your story has been successfully updated!');\n        }\n        props.history.push(`/postings/${postingId}`);\n    };\n\n    const [imageUploadLoading, setImageUploadLoading] = useState(false);\n    const [imageUploadError, setImageUploadError] = useState('');\n    const uploadImageHandler = async (e) => {\n        const file = e.target.files[0];\n        const bodyFormData = new FormData();\n        bodyFormData.append('image', file)\n        setImageUploadLoading(true);\n        try {\n            const { data } = await Axios.post('/images', bodyFormData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            });\n            console.log(data);\n            setImage(data);\n            setImageUploadLoading(false);\n        } catch (error) {\n            console.log(error);\n            setImageUploadError(error.message);\n            setImageUploadLoading(false);\n        }\n    }\n\n    let isValid = false;\n    if (title !== '' && blog !== '' && category !== '' && text !== '' && image !== '') {\n        isValid = true;\n    }\n\n    \n    useEffect(() => {\n        if (!userInfo) {\n            alert('You need to login!');\n            props.history.push('/login');\n        }\n        dispatch(getPostingDetails(postingId));\n        dispatch(blogGetList());\n        resetHandler();\n        \n        if (successUpdate) {\n            dispatch({ type: POSTING_UPDATE_RESET });\n            props.history.push(`/postings/${postingId}`);\n            \n        }\n    },[dispatch, successUpdate, props.history, userInfo]);\n\n    return (\n        <div className=\"container__long\">\n            <form className=\"form__content\" onSubmit={submitHandler}>\n                <h1 className=\"form__title\">\n                    share a new story!\n                </h1>\n                {loading && <Loading />}\n                {error && <Message message=\"error\">{error}</Message>}\n                <div className=\"row\">\n                    <input\n                        className=\"form__input\"\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"title\"\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                    />\n                </div>\n                <div className=\"row\">\n                    <select\n                        className=\"form__input\"\n                        id=\"blog\"\n                        value={blog}\n                        onChange={e => setBlog(e.target.value)}\n                    >\n                        <option value='' defaultValue={true}>select blog</option>\n                        {mybloglist}\n                    </select>\n                </div>\n                <div className=\"row\">\n                    <select\n                            className=\"form__input\"\n                            id=\"category\"\n                            onChange={e => setCategory(e.target.value)}\n                            value={category}\n                    >\n                        <option defaultValue={true} value=\"\">select category</option>\n                        {categories}\n                    </select>\n                </div>\n                <div className=\"row\">\n                    <Editor\n                        apiKey={process.env.REACT_APP_EDITOR_API_KEY}\n                        initialValue={`<p>${posting ? posting.text : 'Write your story here'}</p>`}\n                        init={{\n                            height: 400,\n                            width: 800,\n                            menubar: false,\n                            content_style: 'body { font-family:Courier New, Courier, monospace; font-size:1.1rem }',\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={setText}\n                    />\n                </div>\n                <div className=\"row\">\n                    <input\n                        className=\"form__input\"\n                        type=\"file\"\n                        id=\"image\"\n                        placeholder=\"image\"\n                        onChange={uploadImageHandler}\n                    />\n                    {imageUploadLoading && <Loading />}\n                    {imageUploadError && <Message message=\"error\">{imageUploadError}</Message>}\n                </div>\n                <div className=\"row\">\n                    <input\n                        className=\"form__input\"\n                        type=\"text\"\n                        id=\"hashtags\"\n                        placeholder=\"enter hashtags separated by commas\"\n                        value={hashtags.toLowerCase().replace(/[^\\w\\s]/gi, ' ').replace(/ +/g, ',').replace(/,+/g,',')}\n                        onChange={e => setHashtags(e.target.value)}\n                    />\n                </div>\n                <div className=\"row\">\n                    <button \n                        className=\"form__btn btn\" \n                        type='submit'\n                        disabled={isValid ? false : true}\n                        style={{backgroundColor: isValid ? 'var(--Blue)' : 'var(--Gray)', boxShadow: !isValid && 'none'}}\n                    >\n                        update this story\n                    </button>\n                </div>\n                <div className=\"row between\">\n                    <button className=\"btn btn__reset\" type=\"reset\" onClick={resetHandler}>reset</button>\n                    <button className=\"btn btn__cancel\" onClick={() => props.history.push('/blogs')}>cancel</button>\n                </div>\n                \n            </form>\n        </div>\n    )\n}\n",["85","86"],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/EditBlog.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/store.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Follows.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/CreatePosting.js",["87"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { createPosting } from '../actions/postingActions';\nimport { CATEGORIES } from '../category';\nimport Loading from '../components/Loading';\nimport Message from '../components/Message';\nimport { POSTING_CREATE_RESET } from '../constants/postingConstants';\nimport { blogGetList } from '../actions/blogActions';\nimport { RenderHashtags } from '../components/RenderHashtags';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nexport default function CreatePosting(props) {\n    const dispatch = useDispatch();\n    const redirectPath = props.location.search \n        ? props.location.search.split('=')[1]\n        : '/';\n\n    const [title, setTitle] = useState('');\n    const [blog, setBlog] = useState('');\n    const [category, setCategory] = useState('');\n    const [text, setText] = useState('');\n    const [image, setImage] = useState(['']);\n    const [hashtags, setHashtags] = useState('');\n\n    const blogList = useSelector(state => state.blogList);\n    const { blogs } = blogList;\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    const myblogs = blogs && blogs.filter(blog => blog.author._id === userInfo._id);\n    const postingCreate = useSelector(state => state.postingCreate);\n    const { loading, success, posting: postingCreated, error } = postingCreate;\n    const categories = CATEGORIES.map(category => (\n        <option value={category} key={category}>{category}</option>\n    ));\n\n    const mybloglist = myblogs \n    ? myblogs.map(blog => (\n        <option value={blog._id} key={blog._id}>{blog.title}</option>\n    ))\n    : <option value={null} disabled={true}>No Blog. You need to created a blog first.</option>\n    \n    const resetHandler = () => {\n        setTitle('');\n        setBlog('');\n        setCategory('');\n        setText('');\n        setImage('');\n        setHashtags('');\n    };\n\n    const submitHandler = () => {\n        const hashList = RenderHashtags(hashtags);\n        dispatch(createPosting(title, blog, category, text, image, hashList));\n    };\n\n    \n    let isValid = false;\n    if (title !== '' && blog !== '' && category !== '' && text !== '' && image !== '') {\n        isValid = true;\n    };\n    \n    useEffect(() => {\n        if (!userInfo) {\n            alert('You need to login!');\n            props.history.push('/login');\n        }\n        \n        dispatch(blogGetList());\n\n        if (myblogs)  {\n            if (myblogs.length === 0) {\n                alert('You need to create a blog before writing!');\n                props.history.push('/createblog');\n            }\n        }\n        \n        if (success) {\n            alert('Your new story has been successfully created!');\n            dispatch({ type: POSTING_CREATE_RESET });\n            console.log(postingCreated._id)\n            resetHandler();\n            props.history.push(`/postings/${postingCreated._id}`);\n        }\n\n        \n    },[dispatch, success, postingCreated, props.history, userInfo]);\n\n    return (\n        <div className=\"container__long\">\n            <form className=\"form__content\" onSubmit={submitHandler}>\n                <h1 className=\"form__title\">\n                    share a new story!\n                </h1>\n                {loading && <Loading />}\n                {error && <Message message=\"error\">{error}</Message>}\n                <div className=\"row\">\n                    <input\n                        className=\"form__input\"\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"title\"\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                    />\n                </div>\n                <div className=\"row\">\n                    <select\n                        className=\"form__input\"\n                        id=\"blog\"\n                        value={blog}\n                        onChange={e => setBlog(e.target.value)}\n                    >\n                        <option value='' defaultValue={true}>select blog</option>\n                        {mybloglist}\n                    </select>\n                </div>\n                <div className=\"row\">\n                    <select\n                        className=\"form__input\"\n                        id=\"category\"\n                        value={category}\n                        onChange={e => setCategory(e.target.value)}\n                    >\n                        <option defaultValue={true} value=''>select category</option>\n                        {categories}\n                    </select>\n                </div>\n                <div className=\"row\">\n                    <Editor\n                        apiKey={process.env.REACT_APP_EDITOR_API_KEY}\n                        initialValue=\"<p>write your story here.</p>\"\n                        init={{\n                        height: 400,\n                        width: 800,\n                        menubar: false,\n                        content_style: 'body { font-family:Courier New, Courier, monospace; font-size:1.1rem }',\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={setText}\n                        // outputFormat=\"text\"\n                    />\n                </div>\n                <div className=\"row\">\n                    <input\n                        className=\"form__input\"\n                        type=\"text\"\n                        id=\"image\"\n                        placeholder=\"image\"\n                        value={image}\n                        onChange={e => setImage(e.target.value)}\n                    />\n                </div>\n                <div className=\"row\">\n                    <input\n                        className=\"form__input\"\n                        type=\"text\"\n                        id=\"hashtags\"\n                        placeholder=\"enter hashtags separated by commas\"\n                        value={hashtags.toLowerCase().replace(/[^\\w\\s]/gi, ',').replace(/ +/g, ',').replace(/,+/g,',')}\n                        onChange={e => setHashtags(e.target.value)}\n                    />\n                </div>\n                <button \n                        className=\"form__btn btn\" \n                        type='submit' \n                        disabled={isValid ? false : true}\n                        style={{backgroundColor: isValid ? 'var(--Blue)' : 'var(--Gray)', boxShadow: !isValid && 'none'}}\n                    >\n                        post this story\n                    </button>\n                <div className=\"row between\">\n                    <button className=\"btn btn__reset\" type=\"reset\" onClick={resetHandler}>reset</button>\n                    <button className=\"btn btn__cancel\" onClick={e => props.history.push(redirectPath)}>cancel</button>\n                </div>\n                \n            </form>\n        </div>\n    )\n}\n","/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Signup.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Profile.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/MyBlogs.js",[],"/Users/sohye/Desktop/P/9_pen/frontend/src/screens/Login.js",[],{"ruleId":"88","severity":1,"message":"89","line":19,"column":11,"nodeType":"90","messageId":"91","endLine":19,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":28,"column":22,"nodeType":"90","messageId":"91","endLine":28,"endColumn":35},{"ruleId":"88","severity":1,"message":"93","line":28,"column":68,"nodeType":"90","messageId":"91","endLine":28,"endColumn":79},{"ruleId":"94","severity":1,"message":"95","line":112,"column":7,"nodeType":"96","endLine":112,"endColumn":57,"suggestions":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"102","line":89,"column":7,"nodeType":"96","endLine":89,"endColumn":67,"suggestions":"103"},"no-unused-vars","'redirectPath' is assigned a value but never used.","Identifier","unusedVar","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postingId' and 'resetHandler'. Either include them or remove the dependency array.","ArrayExpression",["104"],"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"React Hook useEffect has a missing dependency: 'myblogs'. Either include it or remove the dependency array.",["107"],{"desc":"108","fix":"109"},"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, userInfo, postingId, resetHandler]",{"range":"112","text":"113"},"Update the dependencies array to be: [dispatch, success, postingCreated, props.history, userInfo, myblogs]",{"range":"114","text":"115"},[4426,4476],"[dispatch, successUpdate, props.history, userInfo, postingId, resetHandler]",[3051,3111],"[dispatch, success, postingCreated, props.history, userInfo, myblogs]"]